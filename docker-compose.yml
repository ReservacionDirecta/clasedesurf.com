version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: clasedesurf-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: clasedesurf.com
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - clasedesurf-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ${DOCKER_USERNAME:-yerct}/clasedesurf-backend:${VERSION:-latest}
    container_name: clasedesurf-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-4000}:4000"
    environment:
      # Database
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/clasedesurf.com
      
      # Server
      PORT: 4000
      NODE_ENV: production
      
      # JWT
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-in-production}
      
      # CORS
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      
      # WhatsApp (optional)
      WHATSAPP_ENABLED: ${WHATSAPP_ENABLED:-false}
      WHATSAPP_SESSION_PATH: ${WHATSAPP_SESSION_PATH:-./whatsapp-session}
      
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - clasedesurf-network
    volumes:
      - ./backend/whatsapp-session:/app/whatsapp-session
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:4000}
        NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL:-http://localhost:4000}
    image: ${DOCKER_USERNAME:-yerct}/clasedesurf-frontend:${VERSION:-latest}
    container_name: clasedesurf-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      # Backend URLs
      NEXT_PUBLIC_API_URL: http://backend:4000
      NEXT_PUBLIC_BACKEND_URL: http://backend:4000
      BACKEND_URL: http://backend:4000
      
      # NextAuth
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-nextauth-secret-change-in-production}
      
      # Node
      NODE_ENV: production
      
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - clasedesurf-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  clasedesurf-network:
    driver: bridge
