# Script para construir y subir im√°genes Docker a Docker Hub
# Uso: .\docker-build-push-all.ps1 -Username "tu-usuario" -Version "1.0.0"

param(
    [Parameter(Mandatory=$false)]
    [string]$Username = "yerct",
    
    [Parameter(Mandatory=$false)]
    [string]$Version = "latest",
    
    [Parameter(Mandatory=$false)]
    [switch]$SkipBuild = $false,
    
    [Parameter(Mandatory=$false)]
    [switch]$SkipPush = $false,
    
    [Parameter(Mandatory=$false)]
    [switch]$BuildOnly = $false
)

$ErrorActionPreference = "Stop"

Write-Host "üê≥ Clase de Surf - Docker Build & Push Script" -ForegroundColor Cyan
Write-Host "=============================================" -ForegroundColor Cyan
Write-Host ""

# Verificar que Docker est√° instalado
try {
    docker --version | Out-Null
    Write-Host "‚úÖ Docker est√° instalado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker no est√° instalado o no est√° en el PATH" -ForegroundColor Red
    exit 1
}

# Verificar que Docker est√° corriendo
try {
    docker ps | Out-Null
    Write-Host "‚úÖ Docker est√° corriendo" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker no est√° corriendo. Por favor, inicia Docker Desktop" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üìã Configuraci√≥n:" -ForegroundColor Cyan
Write-Host "   Usuario Docker Hub: $Username" -ForegroundColor White
Write-Host "   Versi√≥n: $Version" -ForegroundColor White
Write-Host ""

# Login a Docker Hub (solo si no es BuildOnly)
if (-not $BuildOnly) {
    Write-Host "üîê Iniciando sesi√≥n en Docker Hub..." -ForegroundColor Yellow
    Write-Host "   Por favor, ingresa tus credenciales de Docker Hub" -ForegroundColor Yellow
    docker login
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Error al iniciar sesi√≥n en Docker Hub" -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ Sesi√≥n iniciada correctamente" -ForegroundColor Green
    Write-Host ""
}

# Funci√≥n para construir imagen
function Build-Image {
    param(
        [string]$Service,
        [string]$Context,
        [string]$ImageName
    )
    
    Write-Host "üî® Construyendo $Service..." -ForegroundColor Cyan
    Write-Host "   Contexto: $Context" -ForegroundColor Gray
    Write-Host "   Imagen: $ImageName" -ForegroundColor Gray
    
    $buildArgs = @(
        "build",
        "-t", $ImageName,
        "-f", "$Context/Dockerfile",
        $Context
    )
    
    & docker $buildArgs
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Error al construir $Service" -ForegroundColor Red
        return $false
    }
    
    Write-Host "‚úÖ $Service construido correctamente" -ForegroundColor Green
    Write-Host ""
    return $true
}

# Funci√≥n para subir imagen
function Push-Image {
    param(
        [string]$Service,
        [string]$ImageName
    )
    
    Write-Host "üì§ Subiendo $Service a Docker Hub..." -ForegroundColor Cyan
    Write-Host "   Imagen: $ImageName" -ForegroundColor Gray
    
    docker push $ImageName
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Error al subir $Service" -ForegroundColor Red
        return $false
    }
    
    Write-Host "‚úÖ $Service subido correctamente" -ForegroundColor Green
    Write-Host ""
    return $true
}

# Construir Backend
if (-not $SkipBuild) {
    $backendImage = "$Username/clasedesurf-backend:$Version"
    $backendSuccess = Build-Image -Service "Backend" -Context "./backend" -ImageName $backendImage
    
    if (-not $backendSuccess) {
        Write-Host "‚ùå Fall√≥ la construcci√≥n del Backend" -ForegroundColor Red
        exit 1
    }
    
    # Tag como latest si no es latest
    if ($Version -ne "latest") {
        Write-Host "üè∑Ô∏è  Etiquetando Backend como latest..." -ForegroundColor Yellow
        docker tag $backendImage "$Username/clasedesurf-backend:latest"
    }
} else {
    Write-Host "‚è≠Ô∏è  Saltando construcci√≥n del Backend" -ForegroundColor Yellow
    Write-Host ""
}

# Construir Frontend
if (-not $SkipBuild) {
    $frontendImage = "$Username/clasedesurf-frontend:$Version"
    $frontendSuccess = Build-Image -Service "Frontend" -Context "./frontend" -ImageName $frontendImage
    
    if (-not $frontendSuccess) {
        Write-Host "‚ùå Fall√≥ la construcci√≥n del Frontend" -ForegroundColor Red
        exit 1
    }
    
    # Tag como latest si no es latest
    if ($Version -ne "latest") {
        Write-Host "üè∑Ô∏è  Etiquetando Frontend como latest..." -ForegroundColor Yellow
        docker tag $frontendImage "$Username/clasedesurf-frontend:latest"
    }
} else {
    Write-Host "‚è≠Ô∏è  Saltando construcci√≥n del Frontend" -ForegroundColor Yellow
    Write-Host ""
}

# Subir im√°genes a Docker Hub
if (-not $SkipPush -and -not $BuildOnly) {
    Write-Host "üì§ Subiendo im√°genes a Docker Hub..." -ForegroundColor Cyan
    Write-Host ""
    
    # Subir Backend
    $backendImage = "$Username/clasedesurf-backend:$Version"
    $backendPushSuccess = Push-Image -Service "Backend" -ImageName $backendImage
    
    if ($Version -ne "latest") {
        Push-Image -Service "Backend (latest)" -ImageName "$Username/clasedesurf-backend:latest" | Out-Null
    }
    
    # Subir Frontend
    $frontendImage = "$Username/clasedesurf-frontend:$Version"
    $frontendPushSuccess = Push-Image -Service "Frontend" -ImageName $frontendImage
    
    if ($Version -ne "latest") {
        Push-Image -Service "Frontend (latest)" -ImageName "$Username/clasedesurf-frontend:latest" | Out-Null
    }
    
    if ($backendPushSuccess -and $frontendPushSuccess) {
        Write-Host "‚úÖ Todas las im√°genes subidas correctamente" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Algunas im√°genes no se pudieron subir" -ForegroundColor Yellow
    }
} elseif ($BuildOnly) {
    Write-Host "‚è≠Ô∏è  Modo BuildOnly: No se subir√°n las im√°genes" -ForegroundColor Yellow
} else {
    Write-Host "‚è≠Ô∏è  Saltando subida de im√°genes" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "=============================================" -ForegroundColor Cyan
Write-Host "‚úÖ Proceso completado!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Im√°genes creadas:" -ForegroundColor Cyan
Write-Host "   - $Username/clasedesurf-backend:$Version" -ForegroundColor White
Write-Host "   - $Username/clasedesurf-frontend:$Version" -ForegroundColor White

if ($Version -ne "latest") {
    Write-Host "   - $Username/clasedesurf-backend:latest" -ForegroundColor White
    Write-Host "   - $Username/clasedesurf-frontend:latest" -ForegroundColor White
}

Write-Host ""
Write-Host "üöÄ Para desplegar la aplicaci√≥n:" -ForegroundColor Cyan
Write-Host "   docker-compose up -d" -ForegroundColor White
Write-Host ""
Write-Host "üîç Para ver las im√°genes en Docker Hub:" -ForegroundColor Cyan
Write-Host "   https://hub.docker.com/u/$Username" -ForegroundColor White
Write-Host ""
