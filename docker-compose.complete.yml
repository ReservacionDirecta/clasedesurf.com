version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: surfschool-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-clasedesurf.com}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - surfschool-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: surfschool-backend
    ports:
      - "${BACKEND_PORT:-4000}:4000"
    environment:
      # Database
      DATABASE_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-clasedesurf.com}"
      
      # JWT & Auth
      JWT_SECRET: "${JWT_SECRET:-dev-secret-key-change-in-production}"
      
      # Server Configuration
      PORT: 4000
      NODE_ENV: "${NODE_ENV:-development}"
      
      # Frontend URL for CORS
      FRONTEND_URL: "${FRONTEND_URL:-http://localhost:3000}"
      
      # WhatsApp Integration (Optional)
      WHATSAPP_ENABLED: "${WHATSAPP_ENABLED:-false}"
      EVOLUTION_API_URL: "${EVOLUTION_API_URL:-http://evolution-api:8080}"
      EVOLUTION_API_KEY: "${EVOLUTION_API_KEY:-change-this-api-key-for-production}"
      EVOLUTION_INSTANCE_NAME: "${EVOLUTION_INSTANCE_NAME:-surfschool}"
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - surfschool-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health || http://localhost:4000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL:-http://localhost:4000}
    container_name: surfschool-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      # API Configuration
      NEXT_PUBLIC_BACKEND_URL: "${NEXT_PUBLIC_BACKEND_URL:-http://localhost:4000}"
      NEXT_PUBLIC_API_URL: "${NEXT_PUBLIC_API_URL:-http://localhost:4000}"
      
      # NextAuth Configuration
      NEXTAUTH_URL: "${NEXTAUTH_URL:-http://localhost:3000}"
      NEXTAUTH_SECRET: "${NEXTAUTH_SECRET:-dev-secret-change-in-production}"
      
      # Database for NextAuth (if using database sessions)
      DATABASE_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-clasedesurf.com}"
      
      # Environment
      NODE_ENV: "${NODE_ENV:-development}"
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - surfschool-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health || http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis (Cache & Sessions)
  redis:
    image: redis:7-alpine
    container_name: surfschool-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - surfschool-network
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Nginx (Reverse Proxy & Load Balancer)
  nginx:
    image: nginx:alpine
    container_name: surfschool-nginx
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - surfschool-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Evolution API (WhatsApp Integration) - Optional
  evolution-api:
    image: atendai/evolution-api:latest
    container_name: surfschool-evolution
    ports:
      - "${EVOLUTION_PORT:-8080}:8080"
    environment:
      # Database
      DB_CONNECTION: postgresql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_DATABASE: ${POSTGRES_DB:-clasedesurf.com}

      # Redis
      REDIS_ENABLED: 'true'
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: "${REDIS_PASSWORD:-}"

      # Authentication
      AUTHENTICATION_API_KEY: "${EVOLUTION_API_KEY:-change-this-api-key-for-production}"
      AUTHENTICATION_JWT_SECRET: "${JWT_SECRET:-dev-secret-key-change-in-production}"

      # Server Configuration
      SERVER_URL: "${EVOLUTION_SERVER_URL:-http://localhost:8080}"
      SERVER_PORT: 8080
      WEBHOOK_BASE_URL: "${WEBHOOK_BASE_URL:-http://backend:4000}"

      # Logging
      LOG_LEVEL: "${LOG_LEVEL:-INFO}"
      LOG_COLOR: 'true'

      # CORS
      CORS_ORIGIN: '*'

      # Webhook Configuration
      WEBHOOK_GLOBAL_ENABLED: 'true'
      WEBHOOK_EVENTS_MESSAGES_UPSERT: 'true'
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    networks:
      - surfschool-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - whatsapp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local
  evolution_instances:
    driver: local
  evolution_store:
    driver: local

networks:
  surfschool-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16